{"version":3,"sources":["APIRequests.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","a","axios","get","todo","data","name","priority","post","newTodo","id","delete","message","getAllTodos","addTodo","deleteTodo","Todo","className","onClick","TodoForm","React","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","todos","setTodos","useEffect","APIRequests","fetchTodoAndSetTodos","newTodos","filter","i","console","log","Array","isArray","todoArray","l","length","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEMA,EAAU,wD,4CAEhB,8BAAAC,EAAA,sEAC+BC,IAAMC,IAAIH,GADzC,uBACgBI,EADhB,EACUC,KADV,kBAESD,GAFT,4C,kEAKA,WAAuBE,EAAMC,GAA7B,iBAAAN,EAAA,sEACkCC,IAAMM,KAAKR,EAAS,CAClDM,OACAC,aAHJ,uBACgBE,EADhB,EACUJ,KADV,kBAKSI,GALT,4C,kEAQA,WAA0BC,GAA1B,eAAAT,EAAA,sEACwBC,IAAMS,OAAN,UAAgBX,GAAhB,OAA0BU,IADlD,cACQE,EADR,yBAESA,GAFT,4C,sBAKe,OAAEC,Y,2CAAaC,Q,8CAASC,W,6CClBvC,SAASC,EAAT,GAAqC,IAArBZ,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,WACpB,OACE,sBAAKE,UAAU,OAAf,UACGb,EAAKE,KACN,2CAAcF,EAAKG,YACnB,8BACE,wBAAQW,QAAS,kBAAMH,EAAWX,EAAKM,KAAvC,yBAMR,SAASS,EAAT,GAAgC,IAAZL,EAAW,EAAXA,QAAW,EACHM,IAAMC,SAAS,IADZ,mBACtBC,EADsB,KACfC,EADe,KAU7B,OACE,uBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACGJ,IACLR,EAAQQ,GACRC,EAAS,MAIT,UACE,uBACEI,KAAK,OACLV,UAAU,QACVK,MAAOA,EACPM,SAAU,SAACH,GAAD,OAAOF,EAASE,EAAEI,OAAOP,UAErC,4CA2ESQ,MAtEf,WAAgB,IAAD,EACaT,mBAAS,IADtB,mBACNU,EADM,KACCC,EADD,KAGbC,qBAAU,YACkB,uCAAG,4BAAAhC,EAAA,sEACPiC,EAAYrB,cADL,OACrBkB,EADqB,OAE3BC,EAASD,GAFkB,2CAAH,qDAI1BI,KACC,IAEH,IAAMrB,EAAO,uCAAG,WAAOJ,EAAIH,GAAX,eAAAN,EAAA,sEACSiC,EAAYpB,QAAQJ,EAAgB,GAD7C,OACR0B,EADQ,OAEdJ,EAAS,GAAD,mBAAKD,GAAL,CAAYK,KAFN,2CAAH,wDAKPrB,EAAU,uCAAG,WAAOL,GAAP,SAAAT,EAAA,+EAETiC,EAAYnB,WAAWL,GAFd,OAGfsB,EAASD,EAAMM,QAAO,gBAAOC,EAAP,EAAG5B,GAAH,OAAeA,IAAO4B,MAH7B,uGAAH,sDAOhBC,QAAQC,IAAIT,GACZQ,QAAQC,IAAIC,MAAMC,QAAQX,IAG1B,IAFA,IAAIY,EAAY,GACVC,EAAIb,EAAMc,OACPP,EAAI,EAAGA,EAAIM,EAAGN,IAAK,CAC1B,IAAMlC,EAAO2B,EAAMO,GACnBK,EAAUG,KACR,cAAC9B,EAAD,CAEEV,KAAMF,EAAKE,KACXF,KAAMA,EACNU,QAASA,EACTC,WAAYA,GAJPX,EAAKM,KAmBhB,OACE,sBAAKO,UAAU,MAAf,UACE,cAACE,EAAD,CAAUL,QAASA,IACnB,qBAAKG,UAAU,YAAf,SAEI0B,QClFKI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c0d8f0c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://tamk-4a00ez62-3002-group14.herokuapp.com/todo\";\n\nasync function getAllTodos() {\n  const { data: todo } = await axios.get(API_URL);\n  return todo;\n}\n\nasync function addTodo(name, priority) {\n  const { data: newTodo } = await axios.post(API_URL, {\n    name,\n    priority,\n  });\n  return newTodo;\n}\n\nasync function deleteTodo(id) {\n  const message = await axios.delete(`${API_URL}${id}`);\n  return message;\n}\n\nexport default { getAllTodos, addTodo, deleteTodo };\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport APIRequests from \"./APIRequests.js\";\r\n\r\nfunction Todo({ todo, deleteTodo }) {\r\n  return (\r\n    <div className=\"todo\">\r\n      {todo.name}\r\n      <p>Priority: {todo.priority}</p>\r\n      <div>\r\n        <button onClick={() => deleteTodo(todo.id)}>Remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    addTodo(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"input\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTodoAndSetTodos = async () => {\r\n      const todos = await APIRequests.getAllTodos();\r\n      setTodos(todos);\r\n    };\r\n    fetchTodoAndSetTodos();\r\n  }, []);\r\n\r\n  const addTodo = async (id, priority) => {\r\n    const newTodos = await APIRequests.addTodo(id, (priority = 1));\r\n    setTodos([...todos, newTodos]);\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await APIRequests.deleteTodo(id);\r\n      setTodos(todos.filter(({ id: i }) => id !== i));\r\n    } catch (err) {}\r\n  };\r\n\r\n  console.log(todos);\r\n  console.log(Array.isArray(todos));\r\n  let todoArray = [];\r\n  const l = todos.length;\r\n  for (let i = 0; i < l; i++) {\r\n    const todo = todos[i];\r\n    todoArray.push(\r\n      <Todo\r\n        key={todo.id}\r\n        name={todo.name}\r\n        todo={todo}\r\n        addTodo={addTodo}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    );\r\n  }\r\n\r\n  // let todoArray = todos.map((todo, id) => (\r\n  //   <Todo\r\n  //     key={id}\r\n  //     id={id}\r\n  //     todo={todo}\r\n  //     addTodo={addTodo}\r\n  //     deleteTodo={deleteTodo}\r\n  //   />\r\n  // ));\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <TodoForm addTodo={addTodo} />\r\n      <div className=\"todo-list\">\r\n        {\r\n          todoArray\r\n          /* {todos.map((todo) => (\r\n          <Todo\r\n            key={todos.id}\r\n            name={todos.name}\r\n            todo={todo}\r\n            addTodo={addTodo}\r\n            deleteTodo={deleteTodo}\r\n          />\r\n        ))} */\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}