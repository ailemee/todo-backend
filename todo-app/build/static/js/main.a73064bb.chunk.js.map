{"version":3,"sources":["APIRequests.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","name","priority","a","axios","post","newTodo","data","id","delete","message","payload","put","get","todo","addTodo","deleteTodo","updateTodo","getAllTodos","Todo","className","onClick","TodoForm","React","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","App","todos","setTodos","useEffect","APIRequests","fetchTodoAndSetTodos","newTodos","filter","i","console","log","Array","isArray","todoArray","l","length","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a73064bb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/todo/\";\r\n\r\nasync function addTodo(name, priority) {\r\n  const { data: newTodo } = await axios.post(API_URL, {\r\n    name,\r\n    priority,\r\n  });\r\n  return newTodo;\r\n}\r\nasync function deleteTodo(id) {\r\n  const message = await axios.delete(`${API_URL}${id}`);\r\n  return message;\r\n}\r\n\r\nasync function updateTodo(id, payload) {\r\n  const { data: newTodo } = await axios.put(`${API_URL}${id}`, payload);\r\n  return newTodo;\r\n}\r\n\r\nasync function getAllTodos() {\r\n  const { data: todo } = await axios.get(API_URL, {});\r\n  return todo;\r\n}\r\n\r\nexport default { addTodo, deleteTodo, updateTodo, getAllTodos };\r\n","import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport APIRequests from \"./APIRequests.js\";\r\n\r\nfunction Todo({ todo, deleteTodo }) {\r\n  return (\r\n    <div className=\"todo\">\r\n      {todo.name}\r\n      <p>Priority: {todo.priority}</p>\r\n      <div>\r\n        <button onClick={() => deleteTodo(todo.id)}>Remove</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoForm({ addTodo }) {\r\n  const [value, setValue] = React.useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!value) return;\r\n    addTodo(value);\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"input\"\r\n        value={value}\r\n        onChange={(e) => setValue(e.target.value)}\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTodoAndSetTodos = async () => {\r\n      const todos = await APIRequests.getAllTodos();\r\n      setTodos(todos);\r\n    };\r\n    fetchTodoAndSetTodos();\r\n  }, []);\r\n\r\n  const addTodo = async (id, priority) => {\r\n    const newTodos = await APIRequests.addTodo(id, (priority = 1));\r\n    setTodos([...todos, newTodos]);\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await APIRequests.deleteTodo(id);\r\n      setTodos(todos.filter(({ id: i }) => id !== i));\r\n    } catch (err) {}\r\n  };\r\n\r\n  console.log(todos);\r\n  console.log(Array.isArray(todos));\r\n  let todoArray = [];\r\n  const l = todos.length;\r\n  for (let i = 0; i < l; i++) {\r\n    const todo = todos[i];\r\n    todoArray.push(\r\n      <Todo\r\n        key={todo.id}\r\n        name={todo.name}\r\n        todo={todo}\r\n        addTodo={addTodo}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n    );\r\n  }\r\n\r\n  // let todoArray = todos.map((todo, id) => (\r\n  //   <Todo\r\n  //     key={id}\r\n  //     id={id}\r\n  //     todo={todo}\r\n  //     addTodo={addTodo}\r\n  //     deleteTodo={deleteTodo}\r\n  //   />\r\n  // ));\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <TodoForm addTodo={addTodo} />\r\n      <div className=\"todo-list\">\r\n        {\r\n          todoArray\r\n          /* {todos.map((todo) => (\r\n          <Todo\r\n            key={todos.id}\r\n            name={todos.name}\r\n            todo={todo}\r\n            addTodo={addTodo}\r\n            deleteTodo={deleteTodo}\r\n          />\r\n        ))} */\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}